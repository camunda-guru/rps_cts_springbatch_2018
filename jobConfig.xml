<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:batch="http://www.springframework.org/schema/batch" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:util = "http://www.springframework.org/schema/util" 
 xsi:schemaLocation="http://www.springframework.org/schema/batch   
 http://www.springframework.org/schema/batch/spring-batch-2.2.xsd   
 http://www.springframework.org/schema/beans    
 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
 http://www.springframework.org/schema/util     
      http://www.springframework.org/schema/util/spring-util-3.0.xsd">
    <import resource="context.xml" />      
   <!-- Defining a bean --> 
    <bean id="itemReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql"
			value="select Name,DOP,Cost from product where Product_Id = #{jobParameters['id']}" />
		<property name="rowMapper">
			<bean class="com.cts.insurance.models.ProductRowMapper" />
		</property>
	</bean>

	<bean id="pagingItemReader"
		class="org.springframework.batch.item.database.JdbcPagingItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="queryProvider">
			<bean
				class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
				<property name="dataSource" ref="dataSource" />
				<property name="selectClause" value="select Name, DOP, Cost" />
				<property name="fromClause" value="from product" />
				<property name="whereClause" value="where Product_Id=:id" />
				<property name="sortKey" value="Name" />
			</bean>
		</property>
		<property name="parameterValues">
			<map>
				<entry key="id" value="#{jobParameters['id']}" />
			</map>
		</property>
		<property name="pageSize" value="10" />
		<property name="rowMapper">
			<bean class="com.cts.insurance.models.ProductRowMapper" />
		</property>
	</bean>

	<job id="testJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="step1">
			<tasklet>
				<chunk reader="pagingItemReader" writer="flatFileItemWriter"
					commit-interval="1" />
			</tasklet>
		</step>
	</job>

	<bean id="itemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:xml/outputs/products_new.xml" />
		<property name="marshaller" ref="userUnmarshaller" />
		<property name="rootTagName" value="users" />
	</bean>
	
	<bean id="userUnmarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="aliases">
			<util:map id="aliases">
				<entry key="Product" value="com.cts.insurance.models.Product" />
			</util:map>
		</property>
	</bean>

	<!-- csv file writer -->
	<bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:csv/outputs/products.all.csv" />
		<property name="appendAllowed" value="true" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="productId, name, dop, cost" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

</beans>